
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

class MoviePage extends StatefulWidget {
  const MoviePage({super.key});

  @override
  State<MoviePage> createState() => _MoviePageState();
}

class _MoviePageState extends State<MoviePage> {
  Map<String, dynamic>? movie;
  bool isLoading = true;

  Future<void> fetchMovie() async {
    final response = await http.get(
      // Uri.parse('https://www.omdbapi.com/?i=tt3896198&apikey=e33b1848'),
      Uri.parse('https://api.themoviedb.org/3/movie/popular?api_key=20a699fb69b82aaac4aca9f0179e8594&language=fr-FR'),
    );

    print("Status code: ${response.statusCode}");
    print("Body: ${response.body.substring(0, 100)}");

    if (response.statusCode == 200) {
      final data = json.decode(response.body);
      setState(() {
        movie = data;
        isLoading = false;
      });
    } else {
      throw Exception('Erreur lors du chargement du film');
    }
  }

  @override
  void initState() {
    super.initState();
    fetchMovie();
  }

  @override
    Widget build(BuildContext context) {
      return Scaffold(
        appBar: AppBar(title: const Text('Film OMDB')),
        body: isLoading
            ? const Center(child: CircularProgressIndicator())
            : movie == null
                ? const Center(child: Text("Aucune donn√©e"))
                : Padding(
                    padding: const EdgeInsets.all(16.0),
                    child: ListView.builder(
                      itemCount: movie!['results'].length,
                      itemBuilder: (context, index) {
                        final film = movie!['results'][index];
                        return Card(
                          margin: const EdgeInsets.symmetric(vertical: 8),
                          child: ListTile(
                            title: Text(
                              film['title'] ?? 'Titre inconnu',
                              style: const TextStyle(
                                fontSize: 18,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                            subtitle: Text(
                              film['release_date'] ?? 'Date inconnue',
                            ),
                            leading: film['poster_path'] != null
                                ? Image.network(
                                    'https://image.tmdb.org/t/p/w92${film['poster_path']}',
                                    width: 50,
                                    fit: BoxFit.cover,
                                  )
                                : const Icon(Icons.movie),
                          ),
                        );
                      },
                    ),
                  ),
      );
  }
}